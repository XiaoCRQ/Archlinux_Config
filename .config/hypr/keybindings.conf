## █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
## █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# 查看 https://wiki.hyprland.org/configuring/keywords/ 获取更多关键词说明
# 示例快捷键绑定, 详见 https://wiki.hyprland.org/configuring/binds/ 获取更多示例

# 组分组以便于管理
#  使用 $d=[主组名|子组名1|子组名2|...]
# '$d' 是一个用于组织快捷键组的变量（或使用其他变量）
# 仅用于组织 purposes，不是 Hyprland 的内置变量
# 我们在绑定说明中添加了组名，便于 GUI 或其他美化展示
# [主组|子组1|子组2|...]
# 主组 - 分组名称
# 子组 - 用于避免重复描述的子分组名称

#*  变量设置 
# 默认值已注释时生效
# $mainMod = Super # 超级键 / 元键 / Windows 键
# 分配应用程序
# $TERMINAL = kitty       # 终端模拟器
$EDITOR = nvim          # 文本编辑器
$EXPLORER = thunar     # 文件管理器
$BROWSER = zen-browser      # 网络浏览器

$wm=Window Management # 窗口管理分组变量
$d=[$wm]
bindd = $mainMod, C, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = Alt, F4, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = $mainMod, Delete, $d kill hyprland session, exit
bindd = $mainMod, F, $d Toggle floating,  exec, hyprctl --batch "dispatch togglefloating; dispatch resizeactive exact 95% 95%; dispatch centerwindow"
bindd = $mainMod, G, $d toggle group, togglegroup
bindd = Shift, F11, $d toggle fullscreen, fullscreen
bindd = $mainMod Control Alt, L, $d lock screen, exec, lockscreen.sh
bindd = $mainMod Shift, F, $d toggle pin on focused window, exec, $scrPath/windowpin.sh
bindd = Control Alt, Delete, $d logout menu, exec, $scrPath/logoutlaunch.sh
bindd = Alt_R, Control_R, $d toggle waybar and reload config, exec, killall waybar || (env reload_flag=1 $scrPath/wbarconfgen.sh)
# bindd = ALT_R, Control_R,toggle waybar, exec, killall waybar || waybar # toggle waybar without reloading, this is faster

# group: 窗口管理 | 组导航
$d=[$wm|Group Navigation]
bindd = $mainMod Control, H, $d change active group backwards   , changegroupactive, b
bindd = $mainMod Control, L, $d change active group forwards  , changegroupactive, f

# group: 窗口管理 | 更改焦点
$d=[$wm|Change focus]
bindd = $mainMod, Left, $d focus left, movefocus, l
bindd = $mainMod, Right, $d focus right , movefocus, r
bindd = $mainMod, Up, $d focus up , movefocus, u
bindd = $mainMod, Down , $d focus down, movefocus, d
bindd = $mainMod, h, $d focus left, movefocus, l
bindd = $mainMod, l, $d focus right , movefocus, r
bindd = $mainMod, k, $d focus up , movefocus, u
bindd = $mainMod, j, $d focus down, movefocus, d
bindd = ALT, Tab,$d Cycle focus, cyclenext

# group: 窗口管理 | 调整活动窗口大小
$d=[$wm|Resize Active Window]
bindde = $mainMod Control, Right, $d resize window right , resizeactive, 30 0
bindde = $mainMod Control, Left, $d resize window left, resizeactive, -30 0
bindde = $mainMod Control, Up, $d resize window up, resizeactive, 0 -30
bindde = $mainMod Control, Down, $d resize  window down, resizeactive, 0 30
bindde = $mainMod Control, l, $d resize window right , resizeactive, 30 0
bindde = $mainMod Control, h, $d resize window left, resizeactive, -30 0
bindde = $mainMod Control, k, $d resize window up, resizeactive, 0 -30
bindde = $mainMod Control, j, $d resize  window down, resizeactive, 0 30

# group: 窗口管理 | 移动活动窗口（跨工作区）
# Move active window around current workspace with mainMod + Shift + Control [←→↑↓]
$d=[$wm|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = $mainMod Shift, left, Move active window to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift, right, Move active window to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift, up, Move active window up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Shift, down, Move active window down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d
bindde = $mainMod Shift, h, Move active window to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift, l, Move active window to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift, k, Move active window up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Shift, j, Move active window down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# group: 窗口管理 | 鼠标拖动移动/调整
$d=[$wm|Move & Resize with mouse]
binddm = $mainMod, mouse:272, $d hold to move window, movewindow
binddm = $mainMod, mouse:273, $d hold to resize window, resizewindow
binddm = $mainMod, Z, $d hold to move window , movewindow
binddm = $mainMod, X, $d hold to resize window, resizewindow

# group: 窗口管理
$d=[$wm]
bindd = $mainMod, M, $d toggle split, togglesplit # 功能: 切换窗口拆分模式

# 启动器
$l=Launcher
$d=[$l|Apps]
bindd = $mainMod, Q, $d terminal emulator , exec, $TERMINAL
bindd = $mainMod, E, $d file explorer , exec, $EXPLORER
# bindd = $mainMod, C, $d text editor , exec, $EDITOR
bindd = $mainMod, B, $d web browser , exec, $BROWSER
bindd = Control Shift, Escape, $d system monitor , exec, $scrPath/sysmonlaunch.sh


$d=[$l|Rofi menus]
$rofi-launch=$scrPath/rofilaunch.sh
bindd = $mainMod, R, $d application finder , exec, pkill -x rofi || $rofi-launch d # 启动应用程序查找器
bindd = $mainMod, TAB, $d window switcher , exec, pkill -x rofi || $rofi-launch w # 启动窗口切换器
bindd = $mainMod Shift, E, $d file finder , exec, pkill -x rofi || $rofi-launch f # 启动文件查找器
bindd = $mainMod, slash, $d keybindings hint, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # 显示按键绑定提示
bindd = $mainMod, comma, $d emoji  picker , exec, pkill -x rofi || $scrPath/emoji-picker.sh # 启动表情符号选择器
bindd = $mainMod, period, $d glyph picker , exec, pkill -x rofi || $scrPath/glyph-picker.sh # 启动字符选择器
bindd = $mainMod, V, $d clipboard ,  exec, pkill -x rofi || $scrPath/cliphist.sh -c # 启动剪贴板
bindd = $mainMod Shift, V, $d clipboard manager , exec, pkill -x rofi || $scrPath/cliphist.sh # 启动剪贴板管理器
bindd = $mainMod Shift, A, $d select rofi launcher , exec, pkill -x rofi || $scrPath/rofiselect.sh # 启动 rofi 启动器选择菜单


# 硬件控制
$hc=Hardware Controls
$d=[$hc|Audio]
binddl  = , F10, $d toggle mute output , exec, $scrPath/volumecontrol.sh -o m # 切换音频输出静音状态
binddl  = , XF86AudioMute,$d  toggle mute output, exec, $scrPath/volumecontrol.sh -o m # 切换音频输出静音状态
binddel = , F11, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # 降低音量
binddel = , F12, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # 提高音量
binddl  = , XF86AudioMicMute,$d un/mute microphone  , exec, $scrPath/volumecontrol.sh -i m # 切换麦克风静音状态
binddel = , XF86AudioLowerVolume, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # 降低音量
binddel = , XF86AudioRaiseVolume, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # 提高音量

$d=[$hc|Media]
binddl  = , XF86AudioPlay,$d play media, exec, playerctl play-pause # 切换媒体播放/暂停
binddl  = , XF86AudioPause,$d pause media, exec, playerctl play-pause # 切换媒体播放/暂停
binddl  = , XF86AudioNext,$d next media  , exec, playerctl next # 播放下一首媒体
binddl  = , XF86AudioPrev,$d  previous media , exec, playerctl previous # 播放上一首媒体

$d=[$hc|Brightness]
binddel = , XF86MonBrightnessUp, $d increase brightness , exec, $scrPath/brightnesscontrol.sh i # 增加屏幕亮度
binddel = , XF86MonBrightnessDown, $d decrease brightness , exec, $scrPath/brightnesscontrol.sh d # 降低屏幕亮度

# 实用工具
$ut=Utilities
$d=[$ut]
# binddl = $mainMod, K, $d toggle keyboard layout , exec, $scrPath/keyboardswitch.sh # 切换键盘布局
bindd = $mainMod Alt, G, $d game mode , exec, $scrPath/gamemode.sh # 启用游戏模式（关闭 Hypr 特效）
bindd = $mainMod Shift, G, $d open game launcher , exec, $scrPath/gamelauncher.sh # 启动游戏启动器（Steam 和 Lutris）
$d=[$ut|Screen Capture]
bindd = $mainMod Control, S, $d color picker, exec, hyprpicker -an # 拾取颜色（十六进制）并复制到剪贴板
bindd = $mainMod, S, $d snip screen , exec, $scrPath/screenshot.sh s # 局部截图
bindd = $mainMod Shift, S, $d freeze and snip screen, exec, $scrPath/screenshot.sh sf # 冻结屏幕后局部截图
binddl = $mainMod Alt, S, $d print monitor , exec, $scrPath/screenshot.sh m # 当前显示器截图
binddl = , Print, $d print all monitors , exec, $scrPath/screenshot.sh p # 所有显示器截图

# 主题与壁纸
$rice=Theming and Wallpaper
$d=[$rice]
bindd = $mainMod Alt, Right, $d next global wallpaper , exec, $scrPath/wallpaper.sh -Gn # 切换到下一张全局壁纸
bindd = $mainMod Alt, Left, $d previous global wallpaper , exec, $scrPath/wallpaper.sh -Gp # 切换到上一张全局壁纸
bindd = $mainMod Shift, W, $d select a global wallpaper , exec, pkill -x rofi || $scrPath/wallpaper.sh -SG # 打开壁纸选择菜单
bindd = $mainMod Alt, Up, $d next waybar layout , exec, $scrPath/wbarconfgen.sh n # 切换到下一个 Waybar 布局
bindd = $mainMod Alt, Down, $d previous waybar layout , exec, $scrPath/wbarconfgen.sh p # 切换到上一个 Waybar 布局
bindd = $mainMod Shift, r, $d wallbash mode selector , exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # 打开 Wallbash 模式选择菜单
bindd = $mainMod Shift, T, $d select a theme, exec, pkill -x rofi || $scrPath/themeselect.sh # 打开主题选择菜单

# 工作区
$ws=Workspaces
$d=[$ws|Navigation]
bindd = $mainMod, 1, $d navigate to workspace 1 , workspace, 1
bindd = $mainMod, 2, $d navigate to workspace 2 , workspace, 2
bindd = $mainMod, 3, $d navigate to workspace 3 , workspace, 3
bindd = $mainMod, 4, $d navigate to workspace 4 , workspace, 4
bindd = $mainMod, 5, $d navigate to workspace 5 , workspace, 5
bindd = $mainMod, 6, $d navigate to workspace 6 , workspace, 6
bindd = $mainMod, 7, $d navigate to workspace 7 , workspace, 7
bindd = $mainMod, 8, $d navigate to workspace 8 , workspace, 8
bindd = $mainMod, 9, $d navigate to workspace 9 , workspace, 9
bindd = $mainMod, 0, $d navigate to workspace 10 , workspace, 10

# group: 工作区 | 相对导航
$d=[$ws|Navigation|Relative workspace]
bindd = $mainMod Control, Right, $d change active workspace forwards  , workspace, r+1
bindd = $mainMod Control, Left, $d change active workspace backwards , workspace, r-1

# group: 工作区
$d=[$ws|Navigation]
bindd = $mainMod Control, Down, $d navigate to the nearest empty workspace , workspace, empty

# group: 将窗口移动到工作区
$d=[$ws|Move window to workspace]
bindd = $mainMod Shift, 1, $d move to workspace 1 , movetoworkspace, 1
bindd = $mainMod Shift, 2, $d move to workspace 2 , movetoworkspace, 2
bindd = $mainMod Shift, 3, $d move to workspace 3 , movetoworkspace, 3
bindd = $mainMod Shift, 4, $d move to workspace 4 , movetoworkspace, 4
bindd = $mainMod Shift, 5, $d move to workspace 5 , movetoworkspace, 5
bindd = $mainMod Shift, 6, $d move to workspace 6 , movetoworkspace, 6
bindd = $mainMod Shift, 7, $d move to workspace 7 , movetoworkspace, 7
bindd = $mainMod Shift, 8, $d move to workspace 8 , movetoworkspace, 8
bindd = $mainMod Shift, 9, $d move to workspace 9 , movetoworkspace, 9
bindd = $mainMod Shift, 0, $d move to workspace 10 , movetoworkspace, 10

# group: 工作区 | 相对移动窗口
$d=[$ws]
bindd = $mainMod Control+Alt, Right, $d move window to next relative workspace , movetoworkspace, r+1
bindd = $mainMod Control+Alt, Left, $d move window to previous relative workspace , movetoworkspace, r-1


# group: 工作区 | 滚动切换
$d=[$ws|Navigation]
bindd = $mainMod, mouse_down, $d next workspace, workspace, e-1
bindd = $mainMod, mouse_up, $d previous workspace, workspace, e+1
bindd = $mainMod, D, $d next workspace, workspace, e+1
bindd = $mainMod, A, $d previous workspace, workspace, e-1

# group: 工作区 | 专用工作区（scratchpad）
$d=[$ws|Navigation|Special workspace]
bindd = $mainMod Shift, P, $d move to scratchpad  , movetoworkspace, special
bindd = $mainMod Alt, P, $d move to scratchpad (silent) , movetoworkspacesilent, special
bindd = $mainMod, P, $d toggle scratchpad ,  togglespecialworkspace

# group: 工作区 | 静默移动窗口
$d=[$ws|Navigation|Move window silently]
bindd = $mainMod Alt, 1, $d move to workspace 1  (silent), movetoworkspacesilent, 1
bindd = $mainMod Alt, 2, $d move to workspace 2  (silent), movetoworkspacesilent, 2
bindd = $mainMod Alt, 3, $d move to workspace 3  (silent), movetoworkspacesilent, 3
bindd = $mainMod Alt, 4, $d move to workspace 4  (silent), movetoworkspacesilent, 4
bindd = $mainMod Alt, 5, $d move to workspace 5  (silent), movetoworkspacesilent, 5
bindd = $mainMod Alt, 6, $d move to workspace 6  (silent), movetoworkspacesilent, 6
bindd = $mainMod Alt, 7, $d move to workspace 7  (silent), movetoworkspacesilent, 7
bindd = $mainMod Alt, 8, $d move to workspace 8  (silent), movetoworkspacesilent, 8
bindd = $mainMod Alt, 9, $d move to workspace 9  (silent), movetoworkspacesilent, 9
bindd = $mainMod Alt, 0, $d move to workspace 10 (silent), movetoworkspacesilent, 10

$d=#! unset the group name
